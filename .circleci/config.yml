version: 2

jobs:
  test:
    machine: true
    environment:
      TERM: dumb
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    working_directory: ~/repo

    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS

      # Dependencies
      #   This would typically go in either a build or a build-and-test job when using workflows
      # Restore the dependency cache
      - restore_cache:
          keys:
            # This branch if available
            - v1-dep-{{ .Branch }}-
            # Default branch if not
            - v1-dep-master-
            # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
            - v1-dep-
      # The following line was run implicitly in your 1.0 builds based on what CircleCI inferred about the structure of your project. In 2.0 you need to be explicit about which commands should be run. In some cases you can discard inferred commands if they are not relevant to your project.
      - run: if [ -a ./gradlew ]; then gradlew dependencies --stacktrace; else gradle dependencies --stacktrace; fi
      # Save dependency cache
      - save_cache:
          key: v1-dep-{{ .Branch }}-{{ epoch }}
          paths:
            # This is a broad list of cache paths to include many possible development environments
            # You can probably delete some of these entries
            - vendor/bundle
            - ~/virtualenvs
            - ~/.m2
            - ~/.ivy2
            - ~/.bundle
            - ~/.go_workspace
            - ~/.gradle
            - ~/.cache/bower

      - run: gradle test

      - store_test_results:
          path: /tmp/circleci-test-results
      # Save artifacts
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results

  deploy:
    machine: true
    environment:
      TERM: dumb
    steps:
      - add_ssh_keys:
          fingerprints:
            - "96:2c:54:e3:52:7c:c8:89:e3:0f:58:44:d8:be:71:fb"
      - run:
          name: Update docker-compose
          command: ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -t root@ampnet.io "docker-compose pull -f /home/eugen/ampnet-docker-compose/docker-compose.yml"
      - run:
          name: Run docker-compose
          command: ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -t root@ampnet.io "docker-compose up -f /home/eugen/ampnet-docker-compose/docker-compose.yml"

workflows:
  version: 2

  test-deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - test
